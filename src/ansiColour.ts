// Dataholder class: rgb for HTML, sequence of numbers for ansi escape codes.
export class AnsiColour {
    ansi: Array<number>;
    rgb: string;
    isBright: boolean;

    constructor(ansi: Array<number>, rgb: string, isBright: boolean = false) {
        this.ansi = ansi;
        this.rgb = rgb;
        this.isBright = isBright;
    }
};

/*
*  Dim a colour string, either rgb or hex. Dimming is implemented as multiplication by (1 - f)
*  so 0.2 dims by 20%  
*/
export function dim(colour: string, f: number) {
    let r, g, b;
    if (colour[0] === "#") {
        [r, g, b] = [1, 3, 5].map(ix => colour.slice(ix, ix + 2)).map(x => parseInt(x, 16));
    } else {
        [r, g, b] = colour.match(/\d+/g)?.map(x => parseInt(x));
    }
    return `rgb(${Math.floor(r * (1 - f))}, ${Math.floor(g * (1 - f))}, ${Math.floor(b * (1 - f))})`;
}

// Cf. https://en.wikipedia.org/wiki/ANSI_escape_code

// 4-bit foreground colours
export const FG_4_BIT = {
    normal: [
        new AnsiColour([31], "rgb(222, 56, 43)"),
        new AnsiColour([32], "rgb(57, 181, 74)"),
        new AnsiColour([33], "rgb(255, 199, 6)"),
        new AnsiColour([34], "rgb(0, 111, 184)"),
        new AnsiColour([35], "rgb(118, 38, 113)"),
        new AnsiColour([36], "rgb(44, 181, 233)"),
        new AnsiColour([37], "rgb(204, 204, 204)"),
        new AnsiColour([30], "rgb(1, 1, 1)"),
    ],
    bright: [
        new AnsiColour([1, 31], "rgb(255, 0, 0)", true),
        new AnsiColour([1, 32], "rgb(0, 255, 0)", true),
        new AnsiColour([1, 33], "rgb(255, 255, 0)", true),
        new AnsiColour([1, 34], "rgb(0, 0, 255)", true),
        new AnsiColour([1, 35], "rgb(255, 0, 255)", true),
        new AnsiColour([1, 36], "rgb(0, 255, 255)", true),
        new AnsiColour([1, 37], "rgb(255, 255, 255)", true),
        new AnsiColour([1, 30], "rgb(128, 128, 128)", true),
    ]
}

// 4-bit background colours
export const BG_4_BIT = {
    normal: [
        new AnsiColour([41], "rgb(222, 56, 43)"),
        new AnsiColour([42], "rgb(57, 181, 74)"),
        new AnsiColour([43], "rgb(255, 199, 6)"),
        new AnsiColour([44], "rgb(0, 111, 184)"),
        new AnsiColour([45], "rgb(118, 38, 113)"),
        new AnsiColour([46], "rgb(44, 181, 233)"),
        new AnsiColour([47], "rgb(204, 204, 204)"),
        new AnsiColour([40], "rgb(1, 1, 1)"),
    ],
    bright: [
        new AnsiColour([1, 41], "rgb(255, 0, 0)", true),
        new AnsiColour([1, 42], "rgb(0, 255, 0)", true),
        new AnsiColour([1, 43], "rgb(255, 255, 0)", true),
        new AnsiColour([1, 44], "rgb(0, 0, 255)", true),
        new AnsiColour([1, 45], "rgb(255, 0, 255)", true),
        new AnsiColour([1, 46], "rgb(0, 255, 255)", true),
        new AnsiColour([1, 47], "rgb(255, 255, 255)", true),
        new AnsiColour([1, 40], "rgb(128, 128, 128)", true),
    ]
}

// 8-bit foreground colours
export const FG_8_BIT = [
    new AnsiColour([38, 5, 0], "#000000"),
    new AnsiColour([38, 5, 1], "#800000"),
    new AnsiColour([38, 5, 2], "#008000"),
    new AnsiColour([38, 5, 3], "#808000"),
    new AnsiColour([38, 5, 4], "#000080"),
    new AnsiColour([38, 5, 5], "#800080"),
    new AnsiColour([38, 5, 6], "#008080"),
    new AnsiColour([38, 5, 7], "#c0c0c0"),
    new AnsiColour([38, 5, 8], "#808080"),
    new AnsiColour([38, 5, 9], "#ff0000"),
    new AnsiColour([38, 5, 10], "#00ff00"),
    new AnsiColour([38, 5, 11], "#ffff00"),
    new AnsiColour([38, 5, 12], "#0000ff"),
    new AnsiColour([38, 5, 13], "#ff00ff"),
    new AnsiColour([38, 5, 14], "#00ffff"),
    new AnsiColour([38, 5, 15], "#ffffff"),
    new AnsiColour([38, 5, 16], "#000000"),
    new AnsiColour([38, 5, 17], "#00005f"),
    new AnsiColour([38, 5, 18], "#000087"),
    new AnsiColour([38, 5, 19], "#0000af"),
    new AnsiColour([38, 5, 20], "#0000d7"),
    new AnsiColour([38, 5, 21], "#0000ff"),
    new AnsiColour([38, 5, 22], "#005f00"),
    new AnsiColour([38, 5, 23], "#005f5f"),
    new AnsiColour([38, 5, 24], "#005f87"),
    new AnsiColour([38, 5, 25], "#005faf"),
    new AnsiColour([38, 5, 26], "#005fd7"),
    new AnsiColour([38, 5, 27], "#005fff"),
    new AnsiColour([38, 5, 28], "#008700"),
    new AnsiColour([38, 5, 29], "#00875f"),
    new AnsiColour([38, 5, 30], "#008787"),
    new AnsiColour([38, 5, 31], "#0087af"),
    new AnsiColour([38, 5, 32], "#0087d7"),
    new AnsiColour([38, 5, 33], "#0087ff"),
    new AnsiColour([38, 5, 34], "#00af00"),
    new AnsiColour([38, 5, 35], "#00af5f"),
    new AnsiColour([38, 5, 36], "#00af87"),
    new AnsiColour([38, 5, 37], "#00afaf"),
    new AnsiColour([38, 5, 38], "#00afd7"),
    new AnsiColour([38, 5, 39], "#00afff"),
    new AnsiColour([38, 5, 40], "#00d700"),
    new AnsiColour([38, 5, 41], "#00d75f"),
    new AnsiColour([38, 5, 42], "#00d787"),
    new AnsiColour([38, 5, 43], "#00d7af"),
    new AnsiColour([38, 5, 44], "#00d7d7"),
    new AnsiColour([38, 5, 45], "#00d7ff"),
    new AnsiColour([38, 5, 46], "#00ff00"),
    new AnsiColour([38, 5, 47], "#00ff5f"),
    new AnsiColour([38, 5, 48], "#00ff87"),
    new AnsiColour([38, 5, 49], "#00ffaf"),
    new AnsiColour([38, 5, 50], "#00ffd7"),
    new AnsiColour([38, 5, 51], "#00ffff"),
    new AnsiColour([38, 5, 52], "#5f0000"),
    new AnsiColour([38, 5, 53], "#5f005f"),
    new AnsiColour([38, 5, 54], "#5f0087"),
    new AnsiColour([38, 5, 55], "#5f00af"),
    new AnsiColour([38, 5, 56], "#5f00d7"),
    new AnsiColour([38, 5, 57], "#5f00ff"),
    new AnsiColour([38, 5, 58], "#5f5f00"),
    new AnsiColour([38, 5, 59], "#5f5f5f"),
    new AnsiColour([38, 5, 60], "#5f5f87"),
    new AnsiColour([38, 5, 61], "#5f5faf"),
    new AnsiColour([38, 5, 62], "#5f5fd7"),
    new AnsiColour([38, 5, 63], "#5f5fff"),
    new AnsiColour([38, 5, 64], "#5f8700"),
    new AnsiColour([38, 5, 65], "#5f875f"),
    new AnsiColour([38, 5, 66], "#5f8787"),
    new AnsiColour([38, 5, 67], "#5f87af"),
    new AnsiColour([38, 5, 68], "#5f87d7"),
    new AnsiColour([38, 5, 69], "#5f87ff"),
    new AnsiColour([38, 5, 70], "#5faf00"),
    new AnsiColour([38, 5, 71], "#5faf5f"),
    new AnsiColour([38, 5, 72], "#5faf87"),
    new AnsiColour([38, 5, 73], "#5fafaf"),
    new AnsiColour([38, 5, 74], "#5fafd7"),
    new AnsiColour([38, 5, 75], "#5fafff"),
    new AnsiColour([38, 5, 76], "#5fd700"),
    new AnsiColour([38, 5, 77], "#5fd75f"),
    new AnsiColour([38, 5, 78], "#5fd787"),
    new AnsiColour([38, 5, 79], "#5fd7af"),
    new AnsiColour([38, 5, 80], "#5fd7d7"),
    new AnsiColour([38, 5, 81], "#5fd7ff"),
    new AnsiColour([38, 5, 82], "#5fff00"),
    new AnsiColour([38, 5, 83], "#5fff5f"),
    new AnsiColour([38, 5, 84], "#5fff87"),
    new AnsiColour([38, 5, 85], "#5fffaf"),
    new AnsiColour([38, 5, 86], "#5fffd7"),
    new AnsiColour([38, 5, 87], "#5fffff"),
    new AnsiColour([38, 5, 88], "#870000"),
    new AnsiColour([38, 5, 89], "#87005f"),
    new AnsiColour([38, 5, 90], "#870087"),
    new AnsiColour([38, 5, 91], "#8700af"),
    new AnsiColour([38, 5, 92], "#8700d7"),
    new AnsiColour([38, 5, 93], "#8700ff"),
    new AnsiColour([38, 5, 94], "#875f00"),
    new AnsiColour([38, 5, 95], "#875f5f"),
    new AnsiColour([38, 5, 96], "#875f87"),
    new AnsiColour([38, 5, 97], "#875faf"),
    new AnsiColour([38, 5, 98], "#875fd7"),
    new AnsiColour([38, 5, 99], "#875fff"),
    new AnsiColour([38, 5, 100], "#878700"),
    new AnsiColour([38, 5, 101], "#87875f"),
    new AnsiColour([38, 5, 102], "#878787"),
    new AnsiColour([38, 5, 103], "#8787af"),
    new AnsiColour([38, 5, 104], "#8787d7"),
    new AnsiColour([38, 5, 105], "#8787ff"),
    new AnsiColour([38, 5, 106], "#87af00"),
    new AnsiColour([38, 5, 107], "#87af5f"),
    new AnsiColour([38, 5, 108], "#87af87"),
    new AnsiColour([38, 5, 109], "#87afaf"),
    new AnsiColour([38, 5, 110], "#87afd7"),
    new AnsiColour([38, 5, 111], "#87afff"),
    new AnsiColour([38, 5, 112], "#87d700"),
    new AnsiColour([38, 5, 113], "#87d75f"),
    new AnsiColour([38, 5, 114], "#87d787"),
    new AnsiColour([38, 5, 115], "#87d7af"),
    new AnsiColour([38, 5, 116], "#87d7d7"),
    new AnsiColour([38, 5, 117], "#87d7ff"),
    new AnsiColour([38, 5, 118], "#87ff00"),
    new AnsiColour([38, 5, 119], "#87ff5f"),
    new AnsiColour([38, 5, 120], "#87ff87"),
    new AnsiColour([38, 5, 121], "#87ffaf"),
    new AnsiColour([38, 5, 122], "#87ffd7"),
    new AnsiColour([38, 5, 123], "#87ffff"),
    new AnsiColour([38, 5, 124], "#af0000"),
    new AnsiColour([38, 5, 125], "#af005f"),
    new AnsiColour([38, 5, 126], "#af0087"),
    new AnsiColour([38, 5, 127], "#af00af"),
    new AnsiColour([38, 5, 128], "#af00d7"),
    new AnsiColour([38, 5, 129], "#af00ff"),
    new AnsiColour([38, 5, 130], "#af5f00"),
    new AnsiColour([38, 5, 131], "#af5f5f"),
    new AnsiColour([38, 5, 132], "#af5f87"),
    new AnsiColour([38, 5, 133], "#af5faf"),
    new AnsiColour([38, 5, 134], "#af5fd7"),
    new AnsiColour([38, 5, 135], "#af5fff"),
    new AnsiColour([38, 5, 136], "#af8700"),
    new AnsiColour([38, 5, 137], "#af875f"),
    new AnsiColour([38, 5, 138], "#af8787"),
    new AnsiColour([38, 5, 139], "#af87af"),
    new AnsiColour([38, 5, 140], "#af87d7"),
    new AnsiColour([38, 5, 141], "#af87ff"),
    new AnsiColour([38, 5, 142], "#afaf00"),
    new AnsiColour([38, 5, 143], "#afaf5f"),
    new AnsiColour([38, 5, 144], "#afaf87"),
    new AnsiColour([38, 5, 145], "#afafaf"),
    new AnsiColour([38, 5, 146], "#afafd7"),
    new AnsiColour([38, 5, 147], "#afafff"),
    new AnsiColour([38, 5, 148], "#afd700"),
    new AnsiColour([38, 5, 149], "#afd75f"),
    new AnsiColour([38, 5, 150], "#afd787"),
    new AnsiColour([38, 5, 151], "#afd7af"),
    new AnsiColour([38, 5, 152], "#afd7d7"),
    new AnsiColour([38, 5, 153], "#afd7ff"),
    new AnsiColour([38, 5, 154], "#afff00"),
    new AnsiColour([38, 5, 155], "#afff5f"),
    new AnsiColour([38, 5, 156], "#afff87"),
    new AnsiColour([38, 5, 157], "#afffaf"),
    new AnsiColour([38, 5, 158], "#afffd7"),
    new AnsiColour([38, 5, 159], "#afffff"),
    new AnsiColour([38, 5, 160], "#d70000"),
    new AnsiColour([38, 5, 161], "#d7005f"),
    new AnsiColour([38, 5, 162], "#d70087"),
    new AnsiColour([38, 5, 163], "#d700af"),
    new AnsiColour([38, 5, 164], "#d700d7"),
    new AnsiColour([38, 5, 165], "#d700ff"),
    new AnsiColour([38, 5, 166], "#d75f00"),
    new AnsiColour([38, 5, 167], "#d75f5f"),
    new AnsiColour([38, 5, 168], "#d75f87"),
    new AnsiColour([38, 5, 169], "#d75faf"),
    new AnsiColour([38, 5, 170], "#d75fd7"),
    new AnsiColour([38, 5, 171], "#d75fff"),
    new AnsiColour([38, 5, 172], "#d78700"),
    new AnsiColour([38, 5, 173], "#d7875f"),
    new AnsiColour([38, 5, 174], "#d78787"),
    new AnsiColour([38, 5, 175], "#d787af"),
    new AnsiColour([38, 5, 176], "#d787d7"),
    new AnsiColour([38, 5, 177], "#d787ff"),
    new AnsiColour([38, 5, 178], "#d7af00"),
    new AnsiColour([38, 5, 179], "#d7af5f"),
    new AnsiColour([38, 5, 180], "#d7af87"),
    new AnsiColour([38, 5, 181], "#d7afaf"),
    new AnsiColour([38, 5, 182], "#d7afd7"),
    new AnsiColour([38, 5, 183], "#d7afff"),
    new AnsiColour([38, 5, 184], "#d7d700"),
    new AnsiColour([38, 5, 185], "#d7d75f"),
    new AnsiColour([38, 5, 186], "#d7d787"),
    new AnsiColour([38, 5, 187], "#d7d7af"),
    new AnsiColour([38, 5, 188], "#d7d7d7"),
    new AnsiColour([38, 5, 189], "#d7d7ff"),
    new AnsiColour([38, 5, 190], "#d7ff00"),
    new AnsiColour([38, 5, 191], "#d7ff5f"),
    new AnsiColour([38, 5, 192], "#d7ff87"),
    new AnsiColour([38, 5, 193], "#d7ffaf"),
    new AnsiColour([38, 5, 194], "#d7ffd7"),
    new AnsiColour([38, 5, 195], "#d7ffff"),
    new AnsiColour([38, 5, 196], "#ff0000"),
    new AnsiColour([38, 5, 197], "#ff005f"),
    new AnsiColour([38, 5, 198], "#ff0087"),
    new AnsiColour([38, 5, 199], "#ff00af"),
    new AnsiColour([38, 5, 200], "#ff00d7"),
    new AnsiColour([38, 5, 201], "#ff00ff"),
    new AnsiColour([38, 5, 202], "#ff5f00"),
    new AnsiColour([38, 5, 203], "#ff5f5f"),
    new AnsiColour([38, 5, 204], "#ff5f87"),
    new AnsiColour([38, 5, 205], "#ff5faf"),
    new AnsiColour([38, 5, 206], "#ff5fd7"),
    new AnsiColour([38, 5, 207], "#ff5fff"),
    new AnsiColour([38, 5, 208], "#ff8700"),
    new AnsiColour([38, 5, 209], "#ff875f"),
    new AnsiColour([38, 5, 210], "#ff8787"),
    new AnsiColour([38, 5, 211], "#ff87af"),
    new AnsiColour([38, 5, 212], "#ff87d7"),
    new AnsiColour([38, 5, 213], "#ff87ff"),
    new AnsiColour([38, 5, 214], "#ffaf00"),
    new AnsiColour([38, 5, 215], "#ffaf5f"),
    new AnsiColour([38, 5, 216], "#ffaf87"),
    new AnsiColour([38, 5, 217], "#ffafaf"),
    new AnsiColour([38, 5, 218], "#ffafd7"),
    new AnsiColour([38, 5, 219], "#ffafff"),
    new AnsiColour([38, 5, 220], "#ffd700"),
    new AnsiColour([38, 5, 221], "#ffd75f"),
    new AnsiColour([38, 5, 222], "#ffd787"),
    new AnsiColour([38, 5, 223], "#ffd7af"),
    new AnsiColour([38, 5, 224], "#ffd7d7"),
    new AnsiColour([38, 5, 225], "#ffd7ff"),
    new AnsiColour([38, 5, 226], "#ffff00"),
    new AnsiColour([38, 5, 227], "#ffff5f"),
    new AnsiColour([38, 5, 228], "#ffff87"),
    new AnsiColour([38, 5, 229], "#ffffaf"),
    new AnsiColour([38, 5, 230], "#ffffd7"),
    new AnsiColour([38, 5, 231], "#ffffff"),
    new AnsiColour([38, 5, 232], "#080808"),
    new AnsiColour([38, 5, 233], "#121212"),
    new AnsiColour([38, 5, 234], "#1c1c1c"),
    new AnsiColour([38, 5, 235], "#262626"),
    new AnsiColour([38, 5, 236], "#303030"),
    new AnsiColour([38, 5, 237], "#3a3a3a"),
    new AnsiColour([38, 5, 238], "#444444"),
    new AnsiColour([38, 5, 239], "#4e4e4e"),
    new AnsiColour([38, 5, 240], "#585858"),
    new AnsiColour([38, 5, 241], "#626262"),
    new AnsiColour([38, 5, 242], "#6c6c6c"),
    new AnsiColour([38, 5, 243], "#767676"),
    new AnsiColour([38, 5, 244], "#808080"),
    new AnsiColour([38, 5, 245], "#8a8a8a"),
    new AnsiColour([38, 5, 246], "#949494"),
    new AnsiColour([38, 5, 247], "#9e9e9e"),
    new AnsiColour([38, 5, 248], "#a8a8a8"),
    new AnsiColour([38, 5, 249], "#b2b2b2"),
    new AnsiColour([38, 5, 250], "#bcbcbc"),
    new AnsiColour([38, 5, 251], "#c6c6c6"),
    new AnsiColour([38, 5, 252], "#d0d0d0"),
    new AnsiColour([38, 5, 253], "#dadada"),
    new AnsiColour([38, 5, 254], "#e4e4e4"),
    new AnsiColour([38, 5, 255], "#eeeeee")
]

export const BG_8_BIT = [
    new AnsiColour([48, 5, 0], "#000000"),
    new AnsiColour([48, 5, 1], "#800000"),
    new AnsiColour([48, 5, 2], "#008000"),
    new AnsiColour([48, 5, 3], "#808000"),
    new AnsiColour([48, 5, 4], "#000080"),
    new AnsiColour([48, 5, 5], "#800080"),
    new AnsiColour([48, 5, 6], "#008080"),
    new AnsiColour([48, 5, 7], "#c0c0c0"),
    new AnsiColour([48, 5, 8], "#808080"),
    new AnsiColour([48, 5, 9], "#ff0000"),
    new AnsiColour([48, 5, 10], "#00ff00"),
    new AnsiColour([48, 5, 11], "#ffff00"),
    new AnsiColour([48, 5, 12], "#0000ff"),
    new AnsiColour([48, 5, 13], "#ff00ff"),
    new AnsiColour([48, 5, 14], "#00ffff"),
    new AnsiColour([48, 5, 15], "#ffffff"),
    new AnsiColour([48, 5, 16], "#000000"),
    new AnsiColour([48, 5, 17], "#00005f"),
    new AnsiColour([48, 5, 18], "#000087"),
    new AnsiColour([48, 5, 19], "#0000af"),
    new AnsiColour([48, 5, 20], "#0000d7"),
    new AnsiColour([48, 5, 21], "#0000ff"),
    new AnsiColour([48, 5, 22], "#005f00"),
    new AnsiColour([48, 5, 23], "#005f5f"),
    new AnsiColour([48, 5, 24], "#005f87"),
    new AnsiColour([48, 5, 25], "#005faf"),
    new AnsiColour([48, 5, 26], "#005fd7"),
    new AnsiColour([48, 5, 27], "#005fff"),
    new AnsiColour([48, 5, 28], "#008700"),
    new AnsiColour([48, 5, 29], "#00875f"),
    new AnsiColour([48, 5, 30], "#008787"),
    new AnsiColour([48, 5, 31], "#0087af"),
    new AnsiColour([48, 5, 32], "#0087d7"),
    new AnsiColour([48, 5, 33], "#0087ff"),
    new AnsiColour([48, 5, 34], "#00af00"),
    new AnsiColour([48, 5, 35], "#00af5f"),
    new AnsiColour([48, 5, 36], "#00af87"),
    new AnsiColour([48, 5, 37], "#00afaf"),
    new AnsiColour([48, 5, 38], "#00afd7"),
    new AnsiColour([48, 5, 39], "#00afff"),
    new AnsiColour([48, 5, 40], "#00d700"),
    new AnsiColour([48, 5, 41], "#00d75f"),
    new AnsiColour([48, 5, 42], "#00d787"),
    new AnsiColour([48, 5, 43], "#00d7af"),
    new AnsiColour([48, 5, 44], "#00d7d7"),
    new AnsiColour([48, 5, 45], "#00d7ff"),
    new AnsiColour([48, 5, 46], "#00ff00"),
    new AnsiColour([48, 5, 47], "#00ff5f"),
    new AnsiColour([48, 5, 48], "#00ff87"),
    new AnsiColour([48, 5, 49], "#00ffaf"),
    new AnsiColour([48, 5, 50], "#00ffd7"),
    new AnsiColour([48, 5, 51], "#00ffff"),
    new AnsiColour([48, 5, 52], "#5f0000"),
    new AnsiColour([48, 5, 53], "#5f005f"),
    new AnsiColour([48, 5, 54], "#5f0087"),
    new AnsiColour([48, 5, 55], "#5f00af"),
    new AnsiColour([48, 5, 56], "#5f00d7"),
    new AnsiColour([48, 5, 57], "#5f00ff"),
    new AnsiColour([48, 5, 58], "#5f5f00"),
    new AnsiColour([48, 5, 59], "#5f5f5f"),
    new AnsiColour([48, 5, 60], "#5f5f87"),
    new AnsiColour([48, 5, 61], "#5f5faf"),
    new AnsiColour([48, 5, 62], "#5f5fd7"),
    new AnsiColour([48, 5, 63], "#5f5fff"),
    new AnsiColour([48, 5, 64], "#5f8700"),
    new AnsiColour([48, 5, 65], "#5f875f"),
    new AnsiColour([48, 5, 66], "#5f8787"),
    new AnsiColour([48, 5, 67], "#5f87af"),
    new AnsiColour([48, 5, 68], "#5f87d7"),
    new AnsiColour([48, 5, 69], "#5f87ff"),
    new AnsiColour([48, 5, 70], "#5faf00"),
    new AnsiColour([48, 5, 71], "#5faf5f"),
    new AnsiColour([48, 5, 72], "#5faf87"),
    new AnsiColour([48, 5, 73], "#5fafaf"),
    new AnsiColour([48, 5, 74], "#5fafd7"),
    new AnsiColour([48, 5, 75], "#5fafff"),
    new AnsiColour([48, 5, 76], "#5fd700"),
    new AnsiColour([48, 5, 77], "#5fd75f"),
    new AnsiColour([48, 5, 78], "#5fd787"),
    new AnsiColour([48, 5, 79], "#5fd7af"),
    new AnsiColour([48, 5, 80], "#5fd7d7"),
    new AnsiColour([48, 5, 81], "#5fd7ff"),
    new AnsiColour([48, 5, 82], "#5fff00"),
    new AnsiColour([48, 5, 83], "#5fff5f"),
    new AnsiColour([48, 5, 84], "#5fff87"),
    new AnsiColour([48, 5, 85], "#5fffaf"),
    new AnsiColour([48, 5, 86], "#5fffd7"),
    new AnsiColour([48, 5, 87], "#5fffff"),
    new AnsiColour([48, 5, 88], "#870000"),
    new AnsiColour([48, 5, 89], "#87005f"),
    new AnsiColour([48, 5, 90], "#870087"),
    new AnsiColour([48, 5, 91], "#8700af"),
    new AnsiColour([48, 5, 92], "#8700d7"),
    new AnsiColour([48, 5, 93], "#8700ff"),
    new AnsiColour([48, 5, 94], "#875f00"),
    new AnsiColour([48, 5, 95], "#875f5f"),
    new AnsiColour([48, 5, 96], "#875f87"),
    new AnsiColour([48, 5, 97], "#875faf"),
    new AnsiColour([48, 5, 98], "#875fd7"),
    new AnsiColour([48, 5, 99], "#875fff"),
    new AnsiColour([48, 5, 100], "#878700"),
    new AnsiColour([48, 5, 101], "#87875f"),
    new AnsiColour([48, 5, 102], "#878787"),
    new AnsiColour([48, 5, 103], "#8787af"),
    new AnsiColour([48, 5, 104], "#8787d7"),
    new AnsiColour([48, 5, 105], "#8787ff"),
    new AnsiColour([48, 5, 106], "#87af00"),
    new AnsiColour([48, 5, 107], "#87af5f"),
    new AnsiColour([48, 5, 108], "#87af87"),
    new AnsiColour([48, 5, 109], "#87afaf"),
    new AnsiColour([48, 5, 110], "#87afd7"),
    new AnsiColour([48, 5, 111], "#87afff"),
    new AnsiColour([48, 5, 112], "#87d700"),
    new AnsiColour([48, 5, 113], "#87d75f"),
    new AnsiColour([48, 5, 114], "#87d787"),
    new AnsiColour([48, 5, 115], "#87d7af"),
    new AnsiColour([48, 5, 116], "#87d7d7"),
    new AnsiColour([48, 5, 117], "#87d7ff"),
    new AnsiColour([48, 5, 118], "#87ff00"),
    new AnsiColour([48, 5, 119], "#87ff5f"),
    new AnsiColour([48, 5, 120], "#87ff87"),
    new AnsiColour([48, 5, 121], "#87ffaf"),
    new AnsiColour([48, 5, 122], "#87ffd7"),
    new AnsiColour([48, 5, 123], "#87ffff"),
    new AnsiColour([48, 5, 124], "#af0000"),
    new AnsiColour([48, 5, 125], "#af005f"),
    new AnsiColour([48, 5, 126], "#af0087"),
    new AnsiColour([48, 5, 127], "#af00af"),
    new AnsiColour([48, 5, 128], "#af00d7"),
    new AnsiColour([48, 5, 129], "#af00ff"),
    new AnsiColour([48, 5, 130], "#af5f00"),
    new AnsiColour([48, 5, 131], "#af5f5f"),
    new AnsiColour([48, 5, 132], "#af5f87"),
    new AnsiColour([48, 5, 133], "#af5faf"),
    new AnsiColour([48, 5, 134], "#af5fd7"),
    new AnsiColour([48, 5, 135], "#af5fff"),
    new AnsiColour([48, 5, 136], "#af8700"),
    new AnsiColour([48, 5, 137], "#af875f"),
    new AnsiColour([48, 5, 138], "#af8787"),
    new AnsiColour([48, 5, 139], "#af87af"),
    new AnsiColour([48, 5, 140], "#af87d7"),
    new AnsiColour([48, 5, 141], "#af87ff"),
    new AnsiColour([48, 5, 142], "#afaf00"),
    new AnsiColour([48, 5, 143], "#afaf5f"),
    new AnsiColour([48, 5, 144], "#afaf87"),
    new AnsiColour([48, 5, 145], "#afafaf"),
    new AnsiColour([48, 5, 146], "#afafd7"),
    new AnsiColour([48, 5, 147], "#afafff"),
    new AnsiColour([48, 5, 148], "#afd700"),
    new AnsiColour([48, 5, 149], "#afd75f"),
    new AnsiColour([48, 5, 150], "#afd787"),
    new AnsiColour([48, 5, 151], "#afd7af"),
    new AnsiColour([48, 5, 152], "#afd7d7"),
    new AnsiColour([48, 5, 153], "#afd7ff"),
    new AnsiColour([48, 5, 154], "#afff00"),
    new AnsiColour([48, 5, 155], "#afff5f"),
    new AnsiColour([48, 5, 156], "#afff87"),
    new AnsiColour([48, 5, 157], "#afffaf"),
    new AnsiColour([48, 5, 158], "#afffd7"),
    new AnsiColour([48, 5, 159], "#afffff"),
    new AnsiColour([48, 5, 160], "#d70000"),
    new AnsiColour([48, 5, 161], "#d7005f"),
    new AnsiColour([48, 5, 162], "#d70087"),
    new AnsiColour([48, 5, 163], "#d700af"),
    new AnsiColour([48, 5, 164], "#d700d7"),
    new AnsiColour([48, 5, 165], "#d700ff"),
    new AnsiColour([48, 5, 166], "#d75f00"),
    new AnsiColour([48, 5, 167], "#d75f5f"),
    new AnsiColour([48, 5, 168], "#d75f87"),
    new AnsiColour([48, 5, 169], "#d75faf"),
    new AnsiColour([48, 5, 170], "#d75fd7"),
    new AnsiColour([48, 5, 171], "#d75fff"),
    new AnsiColour([48, 5, 172], "#d78700"),
    new AnsiColour([48, 5, 173], "#d7875f"),
    new AnsiColour([48, 5, 174], "#d78787"),
    new AnsiColour([48, 5, 175], "#d787af"),
    new AnsiColour([48, 5, 176], "#d787d7"),
    new AnsiColour([48, 5, 177], "#d787ff"),
    new AnsiColour([48, 5, 178], "#d7af00"),
    new AnsiColour([48, 5, 179], "#d7af5f"),
    new AnsiColour([48, 5, 180], "#d7af87"),
    new AnsiColour([48, 5, 181], "#d7afaf"),
    new AnsiColour([48, 5, 182], "#d7afd7"),
    new AnsiColour([48, 5, 183], "#d7afff"),
    new AnsiColour([48, 5, 184], "#d7d700"),
    new AnsiColour([48, 5, 185], "#d7d75f"),
    new AnsiColour([48, 5, 186], "#d7d787"),
    new AnsiColour([48, 5, 187], "#d7d7af"),
    new AnsiColour([48, 5, 188], "#d7d7d7"),
    new AnsiColour([48, 5, 189], "#d7d7ff"),
    new AnsiColour([48, 5, 190], "#d7ff00"),
    new AnsiColour([48, 5, 191], "#d7ff5f"),
    new AnsiColour([48, 5, 192], "#d7ff87"),
    new AnsiColour([48, 5, 193], "#d7ffaf"),
    new AnsiColour([48, 5, 194], "#d7ffd7"),
    new AnsiColour([48, 5, 195], "#d7ffff"),
    new AnsiColour([48, 5, 196], "#ff0000"),
    new AnsiColour([48, 5, 197], "#ff005f"),
    new AnsiColour([48, 5, 198], "#ff0087"),
    new AnsiColour([48, 5, 199], "#ff00af"),
    new AnsiColour([48, 5, 200], "#ff00d7"),
    new AnsiColour([48, 5, 201], "#ff00ff"),
    new AnsiColour([48, 5, 202], "#ff5f00"),
    new AnsiColour([48, 5, 203], "#ff5f5f"),
    new AnsiColour([48, 5, 204], "#ff5f87"),
    new AnsiColour([48, 5, 205], "#ff5faf"),
    new AnsiColour([48, 5, 206], "#ff5fd7"),
    new AnsiColour([48, 5, 207], "#ff5fff"),
    new AnsiColour([48, 5, 208], "#ff8700"),
    new AnsiColour([48, 5, 209], "#ff875f"),
    new AnsiColour([48, 5, 210], "#ff8787"),
    new AnsiColour([48, 5, 211], "#ff87af"),
    new AnsiColour([48, 5, 212], "#ff87d7"),
    new AnsiColour([48, 5, 213], "#ff87ff"),
    new AnsiColour([48, 5, 214], "#ffaf00"),
    new AnsiColour([48, 5, 215], "#ffaf5f"),
    new AnsiColour([48, 5, 216], "#ffaf87"),
    new AnsiColour([48, 5, 217], "#ffafaf"),
    new AnsiColour([48, 5, 218], "#ffafd7"),
    new AnsiColour([48, 5, 219], "#ffafff"),
    new AnsiColour([48, 5, 220], "#ffd700"),
    new AnsiColour([48, 5, 221], "#ffd75f"),
    new AnsiColour([48, 5, 222], "#ffd787"),
    new AnsiColour([48, 5, 223], "#ffd7af"),
    new AnsiColour([48, 5, 224], "#ffd7d7"),
    new AnsiColour([48, 5, 225], "#ffd7ff"),
    new AnsiColour([48, 5, 226], "#ffff00"),
    new AnsiColour([48, 5, 227], "#ffff5f"),
    new AnsiColour([48, 5, 228], "#ffff87"),
    new AnsiColour([48, 5, 229], "#ffffaf"),
    new AnsiColour([48, 5, 230], "#ffffd7"),
    new AnsiColour([48, 5, 231], "#ffffff"),
    new AnsiColour([48, 5, 232], "#080808"),
    new AnsiColour([48, 5, 233], "#121212"),
    new AnsiColour([48, 5, 234], "#1c1c1c"),
    new AnsiColour([48, 5, 235], "#262626"),
    new AnsiColour([48, 5, 236], "#303030"),
    new AnsiColour([48, 5, 237], "#3a3a3a"),
    new AnsiColour([48, 5, 238], "#444444"),
    new AnsiColour([48, 5, 239], "#4e4e4e"),
    new AnsiColour([48, 5, 240], "#585858"),
    new AnsiColour([48, 5, 241], "#626262"),
    new AnsiColour([48, 5, 242], "#6c6c6c"),
    new AnsiColour([48, 5, 243], "#767676"),
    new AnsiColour([48, 5, 244], "#808080"),
    new AnsiColour([48, 5, 245], "#8a8a8a"),
    new AnsiColour([48, 5, 246], "#949494"),
    new AnsiColour([48, 5, 247], "#9e9e9e"),
    new AnsiColour([48, 5, 248], "#a8a8a8"),
    new AnsiColour([48, 5, 249], "#b2b2b2"),
    new AnsiColour([48, 5, 250], "#bcbcbc"),
    new AnsiColour([48, 5, 251], "#c6c6c6"),
    new AnsiColour([48, 5, 252], "#d0d0d0"),
    new AnsiColour([48, 5, 253], "#dadada"),
    new AnsiColour([48, 5, 254], "#e4e4e4"),
    new AnsiColour([48, 5, 255], "#eeeeee")
];